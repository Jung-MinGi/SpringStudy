<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/toby"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <bean id="userDao" class="com.springbook.practice.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="userService" class="com.springbook.practice.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="mailSender" ref="mailSender"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="mail.server.com"/>
    </bean>

    <bean id="notCreateByConstructor" class="com.springbook.practice.factoryBean.NotCreateByConstructorFactoryBean">
        <property name="value" value="FactoryBean!!"/>
    </bean>

<!--    <bean id="userService" class="com.springbook.practice.factoryBean.TrProxyFactoryBean">-->
<!--        <property name="transactionManager" ref="transactionManager"/>-->
<!--        <property name="target" ref="userServiceImpl"/>-->
<!--        <property name="pattern" ref="upgradeLevels"/>-->
<!--        <property name="serviceInterface" ref="com.springbook.practice.service.UserService"/>-->
<!--    </bean>-->

    <!--    <bean id="transactionAdvice" class="com.springbook.practice.proxy.TransactionAdvice">-->
    <!--        <property name="transactionManager" ref="transactionManager"/>-->
    <!--    </bean>-->
    <!--    <bean id="transactionAdvice" class="org.springframework.transaction.interceptor.TransactionInterceptor">-->
    <!--        <property name="transactionManager" ref="transactionManager"/>-->
    <!--        <property name="transactionAttributes">-->
    <!--            <props>-->
    <!--                <prop key="get*">PROPAGATION_REQUIRED,readonly,timeout_30</prop>-->
    <!--                <prop key="upgrade*">PROPAGATION_REQUIRES_new,isolation_serializable</prop>-->
    <!--                <prop key="*">PROPAGATION_REQUIRED</prop>-->
    <!--            </props>-->
    <!--        </property>-->
    <!--    </bean>-->
    <tx:advice id="transactionAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="advice" ref="transactionAdvice"/>
        <property name="pointcut" ref="transactionPointcut"/>
    </bean>

    <!--    <bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">-->
    <!--        <property name="target" ref="userServiceImpl"/>-->
    <!--        <property name="interceptorNames">-->
    <!--            <list>-->
    <!--                <value>transactionAdvisor</value>-->
    <!--            </list>-->
    <!--        </property>-->
    <!--    </bean>-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <bean id="transactionPointcut" class="com.springbook.practice.proxy.NameMatchClassMethodPointcut">
        <property name="mappedClassName" value="*ServiceImpl"/>
        <property name="mappedName" value="upgrade*"/>
    </bean>
    <!--    메서드 표현식을 사용한 포인트컷 표현식-->
    <!--    <aop:config>-->
    <!--        <aop:advisor advice-ref="transactionAdvice" pointcut="execution(* *..*ServiceImpl.upgrade*(..))"/>-->
    <!--    </aop:config>-->
    <!--    아래는 빈 이름 패턴을 활용한 포인트것 표현식-->
    <aop:config>
        <aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)"/>
    </aop:config>
</beans>